
R version 3.0.1 (2013-05-16) -- "Good Sport"
Copyright (C) 2013 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # ---------------------------------------------------------------------------- #
> # ---------------------------------------------------------------------------- #
> #                                                 
> # S4 implementation of generalized iLUCK models   
> # -- Tests for Class ExponentialData incl. show method --             
> #                                                 
> # ---------------------------------------------------------------------------- #
> # ---------------------------------------------------------------------------- #
> 
> library(luck)
Loading required package: TeachingDemos

Attaching package: 'luck'

The following object is masked from 'package:utils':

    data

> library(testthat)
> 
> # constructor methods
> # Given data vector
> expdata1 <- ExponentialData(1:10)
> expdata1 <- ExponentialData(data=1:10)
> # Given mean and samplesize
> expdata2 <- ExponentialData(2, 100)
> expdata2 <- ExponentialData(mean=2, n=100)
> expdata2 <- ExponentialData(mean=2, 100)
> expdata2 <- ExponentialData(2, n=100)
> # Simulating values from an exponential distribution
> set.seed(1234)
> expdata3 <- ExponentialData(2,100, sim=TRUE)
> expdata3 <- ExponentialData(mean=2, n=100, sim=TRUE)
> expdata3 <- ExponentialData(mean=2, 100, sim=TRUE)
> expdata3 <- ExponentialData(2, n=100, sim=TRUE)
> # Given LuckModelData-object
> data1 <- LuckModelData(11,2)
> expdata4 <- ExponentialData(data1)
> # Given data vector AND (non-corresponding) mean and samplesize
> expdata5 <- ExponentialData(5,3,c(3,2,3,4)) # TODO: should throw an error
> 
> # replacement method for rawData slot
> set.seed(1235)
> rawData(expdata1) <- rexp(10)
> expect_error(tauN(expdata1) <- matrix(c(0,10), ncol=2))
> # error: should not replace tauN if raw data is present
> expect_error(tau(expdata1) <- 0) 
> # error: should not replace tauN if raw data is present
> expect_error(n(expdata1) <- 10)
> # error: should not replace tauN if raw data is present
> expect_error(tauN(expdata2) <- matrix(c(0,10), ncol=2))
> # error: mean must be strictly greter than 0
> tauN(expdata2) <- matrix(c(1,10), ncol=2)
> tau(expdata2) <- 0.5
> expect_error(tau(expdata2) <- -0.5) # error: mean must be strictly greter than 0
> n(expdata2) <- 20
> 
> # show method
> expdata1
ExponentialData object containing data of sample size 10 
 with mean 1.178026 and variance 2.659697 .
> expdata2
ExponentialData object containing a mean of 0.025 for sample size 20 .
> expdata3
ExponentialData object containing data of sample size 100 
 with mean 1.902344 and variance 3.347216 .
> expdata4
ExponentialData object containing a mean of 5.5 for sample size 2 .
> expdata5
ExponentialData object containing data of sample size 4 
 with mean 3 and variance 0.6666667 .
> 
> #
> 
> proc.time()
   user  system elapsed 
  1.356   0.068   1.435 
